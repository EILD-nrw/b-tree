{"version":3,"sources":["Header.tsx","TreeForms.tsx","BTree.tsx","Footer.tsx","App.tsx","index.tsx"],"names":["Header","className","src","alt","TreeForms","insertionHandler","deletionHandler","resetHandler","treeType","setTreeType","useState","insertValue","setInsertValue","deletionValue","setDeletionValue","onTreeTypeChange","e","Number","currentTarget","value","type","maxLength","onChange","event","onClick","htmlFor","name","id","checked","BTree","infoText","setInfoText","x","console","log","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccefd16e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <header>\r\n      <div className='header-image-container'>\r\n        <img className='header-image' src=\"%PUBLIC_URL%/img/edb_header_logo.png\" alt=\"EDB Logo\" />\r\n        <img className='header-image' src=\"%PUBLIC_URL%/img/eild_header_logo.png\" alt=\"EILD Logo\" />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\ninterface Props {\r\n  insertionHandler: (x: any) => void,\r\n  deletionHandler: (x: any) => void,\r\n  resetHandler: () => void,\r\n  treeType: number,\r\n  setTreeType: (x: number) => void\r\n}\r\n\r\nexport const TreeForms = ({ insertionHandler, deletionHandler, resetHandler, treeType, setTreeType }: Props) => {\r\n  const [insertValue, setInsertValue] = useState('')\r\n  const [deletionValue, setDeletionValue] = useState('')\r\n\r\n  function onInsert (event: React.FormEvent<HTMLButtonElement>) {\r\n    insertionHandler(insertValue)\r\n    setInsertValue('')\r\n  }\r\n\r\n  function onDelete (event: React.FormEvent<HTMLButtonElement>) {\r\n    deletionHandler(deletionValue)\r\n    setDeletionValue('')\r\n  }\r\n\r\n  function onReset (e: React.FormEvent<HTMLButtonElement>) {\r\n    resetHandler()\r\n  }\r\n\r\n  function handleInsertionInput (event: React.FormEvent<HTMLInputElement>) {\r\n    setInsertValue(event.currentTarget.value)\r\n  }\r\n\r\n  function handleDeletionInput (event: React.FormEvent<HTMLInputElement>) {\r\n    setDeletionValue(event.currentTarget.value)\r\n  }\r\n\r\n  function onTreeTypeChange (e: React.FormEvent<HTMLInputElement>) {\r\n    setTreeType(Number(e.currentTarget.value))\r\n  }\r\n\r\n  return (\r\n    <div className='forms-container'>\r\n        <form className='tree-inputs'>\r\n          <input className='tree-text-input' type='text' maxLength={5} value={insertValue} onChange={handleInsertionInput} />\r\n          <button className='btn' type='button' value='insert' onClick={onInsert}>Einfügen</button>\r\n          <input className='tree-text-input' type=\"text\" maxLength={5} value={deletionValue} onChange={handleDeletionInput} />\r\n          <button className='btn' type=\"button\" value=\"delete\" onClick={onDelete}>Löschen</button>\r\n          <button className='btn' type=\"button\" value=\"reset\" onClick={onReset}>Zurücksetzen</button>\r\n        </form>\r\n        <form className='tree-type-input'>\r\n          <label htmlFor=\"treeType1\">Typ des Baums:</label>\r\n          <input type=\"radio\" name=\"treeType\" id=\"treeType1\" value={1} checked={treeType === 1} onChange={onTreeTypeChange} />\r\n          <label htmlFor=\"treeType1\">Typ 1</label>\r\n          <input type=\"radio\" name=\"treeType\" id=\"treeType2\" value={2} checked={treeType === 2} onChange={onTreeTypeChange} />\r\n          <label htmlFor=\"treeType2\">Typ 2</label>\r\n          <input type=\"radio\" name=\"treeType\" id=\"treeType3\" value={3} checked={treeType === 3} onChange={onTreeTypeChange} />\r\n          <label htmlFor=\"treeType3\">Typ 3</label>\r\n          <input type=\"radio\" name=\"treeType\" id=\"treeType4\" value={4} checked={treeType === 4} onChange={onTreeTypeChange} />\r\n          <label htmlFor=\"treeType4\">Typ 4</label>\r\n          <input type=\"radio\" name=\"treeType\" id=\"treeType5\" value={5} checked={treeType === 5} onChange={onTreeTypeChange} />\r\n          <label htmlFor=\"treeType5\">Typ 5</label>\r\n        </form>\r\n      </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { TreeForms } from './TreeForms'\r\n\r\nexport const BTree = () => {\r\n  const [treeType, setTreeType] = useState(1)\r\n  const [infoText, setInfoText] = useState('')\r\n\r\n  function handleInsertion (x: any) {\r\n    console.log('Insert:', x)\r\n  }\r\n\r\n  function handleDeletion (x: any) {\r\n    console.log('Delete: ', x)\r\n  }\r\n\r\n  function handleReset () {\r\n    setInfoText('Reset!')\r\n    console.log('Reset!')\r\n  }\r\n\r\n  return (\r\n    <div className='app-container'>\r\n      <TreeForms\r\n        insertionHandler={handleInsertion}\r\n        deletionHandler={handleDeletion}\r\n        resetHandler={handleReset}\r\n        treeType={treeType}\r\n        setTreeType={setTreeType} />\r\n      <div className='info-text'>{infoText}</div>\r\n\r\n      <canvas id='canvas' />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <h3>EDB - eLearning Datenbank</h3>\r\n    </footer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './app.css'\r\nimport { Header } from './Header'\r\nimport { BTree } from './BTree'\r\nimport { Footer } from './Footer'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='main-container'>\r\n      <Header />\r\n      <BTree />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}